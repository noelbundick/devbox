- when: dapr_version == 'latest'
  block:
  - name: Install tools to handle github prerelease info
    when: ansible_os_family == 'Debian'
    become: true
    apt:
      name:
      - curl
      - jq

  - name: Install tools to handle github prerelease info
    when: ansible_distribution == 'MacOSX'
    homebrew:
      name: jq

  - name: Get latest dapr version
    shell: "curl https://api.github.com/repos/dapr/cli/releases -H 'Authorization: token {{ github_pat }}' | jq -r '.[0].tag_name'"
    register: latest_dapr
    changed_when: false
    check_mode: false

  - name: Set dapr version
    set_fact:
      dapr_version: "{{ latest_dapr.stdout }}"

- name: Detect dapr
  shell: "dapr --version | { echo -n 'v'; grep -Po 'CLI version: \\K[^ ]*'; }"
  ignore_errors: true
  register: current_dapr_version
  changed_when: false
  check_mode: false

- when: porter_version == 'latest'
  block:
  - name: Install tools to handle github prerelease info
    when: ansible_os_family == 'Debian'
    become: true
    apt:
      name:
      - curl
      - jq

  - name: Install tools to handle github prerelease info
    when: ansible_distribution == 'MacOSX'
    homebrew:
      name: jq

  - name: Get latest porter version
    shell: "curl https://api.github.com/repos/deislabs/porter/releases -H 'Authorization: token {{ github_pat }}' | jq -r '.[0].tag_name'"
    register: latest_porter
    changed_when: false
    check_mode: false

  - name: Set porter version
    set_fact:
      porter_version: "{{ latest_porter.stdout }}"

- name: Detect porter
  shell: "~/.porter/porter version | grep -Po 'porter \\K[^ ]*'"
  ignore_errors: true
  register: current_porter_version
  changed_when: false
  check_mode: false

- include_tasks: debian.yml
  when: ansible_os_family == 'Debian'

- include_tasks: macosx.yml
  when: ansible_distribution == 'MacOSX'
